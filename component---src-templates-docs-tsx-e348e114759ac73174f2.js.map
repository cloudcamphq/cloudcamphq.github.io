{"version":3,"file":"component---src-templates-docs-tsx-e348e114759ac73174f2.js","mappings":"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","sources":["webpack://cloudcamp/./node_modules/core-js/internals/get-substitution.js","webpack://cloudcamp/./node_modules/core-js/internals/is-regexp.js","webpack://cloudcamp/./node_modules/core-js/internals/regexp-flags.js","webpack://cloudcamp/./node_modules/core-js/internals/to-string.js","webpack://cloudcamp/./node_modules/core-js/modules/es.string.replace-all.js","webpack://cloudcamp/./node_modules/core-js/modules/esnext.string.replace-all.js","webpack://cloudcamp/./src/templates/docs.tsx"],"sourcesContent":["var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return stringSlice(str, 0, position);\n      case \"'\": return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var global = require('../internals/global');\nvar classof = require('../internals/classof');\n\nvar String = global.String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return String(argument);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar regExpFlags = require('../internals/regexp-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar RegExpPrototype = RegExp.prototype;\nvar TypeError = global.TypeError;\nvar getFlags = uncurryThis(regExpFlags);\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return indexOf(string, searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (searchValue != null) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible('flags' in RegExpPrototype\n          ? searchValue.flags\n          : getFlags(searchValue)\n        ));\n        if (!~indexOf(flags, 'g')) throw TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) {\n        return call(replacer, searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return replace(toString(O), searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      replacement = functionalReplace\n        ? toString(replaceValue(searchString, position, string))\n        : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n    return result;\n  }\n});\n","// TODO: Remove from `core-js@4`\nrequire('../modules/es.string.replace-all');\n","import { graphql, Link } from \"gatsby\";\nimport * as React from \"react\";\nimport Header from \"../components/Header\";\nimport Main from \"../components/Main\";\nimport SidebarLayout from \"../components/SidebarLayout\";\nimport HtmlWithCode from \"../components/Code\";\nimport _ from \"lodash\";\nimport Footer from \"../components/Footer\";\nimport { prepareTocData } from \"../components/TableOfContents\";\n\nexport default function Docs({\n  data,\n  pageContext,\n}: {\n  data: {\n    markdownRemark: {\n      html: string;\n      frontmatter: { slug: string; title: string };\n      headings: { value: string }[];\n    };\n  };\n  pageContext: any;\n}) {\n  const [gettingStarted, operationsGuide, apiNodes, commandNodes] =\n    prepareTocData({ data } as any);\n  let html = data.markdownRemark.html;\n\n  // @ts-ignore\n  html = html.replaceAll(/<a/gm, `<a style=\"color: #d63200;\" `);\n\n  html = html.replace(/<h1>(.*?)<\\/h1>/gm, (match, $1) => {\n    const id = _.kebabCase($1);\n    return `<h2 class=\"text-2xl font-bold mt-10 font-display\" id=\"${id}\"><a href=\"#${id}\">${$1}</a></h2>`;\n  });\n  html = html.replace(/<h2>(.*?)<\\/h2>/gm, (match, $1) => {\n    const id = _.kebabCase($1);\n    return `<h3 class=\"text-2xl font-bold mt-10 font-display\" id=\"${id}\"><a href=\"#${id}\">${$1}</a></h3>`;\n  });\n\n  html = html.replace(/<ul>/gm, `<ul class=\"list-disc list-inside\">`);\n  html = html.replace(/<li>/gm, `<li class=\"py-1\">`);\n\n  const lvl0 = data.markdownRemark.frontmatter.slug.startsWith(\"/guide\")\n    ? \"Using CloudCamp\"\n    : \"Getting Started\";\n\n  return (\n    <>\n      <Header\n        title={data.markdownRemark.frontmatter.title}\n        canonical={\"/docs/\" + data.markdownRemark.frontmatter.slug}\n      />\n      <Main>\n        <div id=\"algolia-lvl0\">{lvl0}</div>\n        <h1 className=\"font-display text-4xl font-bold flex items-center\">\n          {data.markdownRemark.frontmatter.title}\n        </h1>\n        <HtmlWithCode className=\"space-y-6 leading-7\" html={html} />\n        {data.markdownRemark.frontmatter.slug == \"index\" && (\n          <>\n            <h2\n              className=\"text-2xl font-bold pt-7 font-display\"\n              id=\"table-of-contents\"\n            >\n              <a href=\"#table-of-contents\">Table of contents</a>\n            </h2>\n            <ul className=\"pt-2 ml-4\">\n              <li className=\"mb-8 font-medium\">\n                <Link style={{ color: \"#d63200\" }} to=\"/docs/\">\n                  {gettingStarted[0].frontmatter.title}\n                </Link>\n                <ul className=\"ml-4 text-base normal-case font-normal\">\n                  {gettingStarted.slice(1).map((node) => (\n                    <li key={node.frontmatter.slug} className=\"mt-2\">\n                      <Link\n                        style={{ color: \"#d63200\" }}\n                        to={\n                          node.frontmatter.slug == \"index\"\n                            ? \"/docs/\"\n                            : `/docs/${node.frontmatter.slug}`\n                        }\n                      >\n                        {node.frontmatter.title}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n              <li className=\"mb-8 font-medium\">\n                <Link style={{ color: \"#d63200\" }} to={`/docs/guide/`}>\n                  {operationsGuide[0].frontmatter.title}\n                </Link>\n                <ul className=\"ml-4 text-base normal-case font-normal\">\n                  {operationsGuide.slice(1).map((node) => (\n                    <li key={node.frontmatter.slug} className=\"mt-2\">\n                      <Link\n                        style={{ color: \"#d63200\" }}\n                        to={`/docs/${node.frontmatter.slug}`}\n                      >\n                        {node.frontmatter.title}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n              <li className=\"mb-8 font-medium\">\n                <Link style={{ color: \"#d63200\" }} to={`/docs/api/`}>\n                  API Reference\n                </Link>\n                <ul className=\"ml-4 text-base normal-case font-normal\">\n                  {apiNodes.map((node) => (\n                    <li key={node.name} className=\"mt-2\">\n                      <Link\n                        style={{ color: \"#d63200\" }}\n                        to={`/docs/api/${_.kebabCase(node.name)}`}\n                      >\n                        {node.name}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n              <li className=\"mb-8 font-medium\">\n                <Link style={{ color: \"#d63200\" }} to={`/docs/command/`}>\n                  Command Reference\n                </Link>\n                <ul className=\"ml-4 text-base normal-case font-normal\">\n                  {commandNodes.map((node) => (\n                    <li key={node.name} className=\"mt-2\">\n                      <Link\n                        style={{ color: \"#d63200\" }}\n                        to={`/docs/command/${_.kebabCase(node.name)}`}\n                      >\n                        {node.name}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </>\n        )}\n        {data.markdownRemark.frontmatter.slug == \"guide/index\" && (\n          <>\n            <h2 className=\"text-2xl font-bold pt-7 font-display\" id=\"guide-toc\">\n              <a href=\"#table-of-contents\">Table of contents</a>\n            </h2>\n            <ul className=\"pt-2 ml-4\">\n              <li className=\"mb-8 font-medium\">\n                <Link style={{ color: \"#d63200\" }} to={`/docs/guide/`}>\n                  {operationsGuide[0].frontmatter.title}\n                </Link>\n                <ul className=\"ml-4 text-base normal-case font-normal\">\n                  {operationsGuide.slice(1).map((node) => (\n                    <li key={node.frontmatter.slug} className=\"mt-2\">\n                      <Link\n                        style={{ color: \"#d63200\" }}\n                        to={`/docs/${node.frontmatter.slug}`}\n                      >\n                        {node.frontmatter.title}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </>\n        )}\n        {data.markdownRemark.frontmatter.slug == \"api/index\" && (\n          <>\n            <h2\n              className=\"text-2xl font-bold pt-7 font-display\"\n              id=\"table-of-contents\"\n            >\n              <a href=\"#table-of-contents\">Table of contents</a>\n            </h2>\n            <ul className=\"pt-2 ml-4\">\n              <li className=\"mb-8 font-medium\">\n                <Link style={{ color: \"#d63200\" }} to={`/docs/api/`}>\n                  API Reference\n                </Link>\n                <ul className=\"ml-4 text-base normal-case font-normal\">\n                  {apiNodes.map((node) => (\n                    <li key={node.name} className=\"mt-2\">\n                      <Link\n                        style={{ color: \"#d63200\" }}\n                        to={`/docs/api/${_.kebabCase(node.name)}`}\n                      >\n                        {node.name}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </>\n        )}\n        {data.markdownRemark.frontmatter.slug == \"command/index\" && (\n          <>\n            <h2\n              className=\"text-2xl font-bold pt-7 font-display\"\n              id=\"table-of-contents\"\n            >\n              <a href=\"#table-of-contents\">Table of contents</a>\n            </h2>\n            <ul className=\"pt-2 ml-4\">\n              <li className=\"mb-8 font-medium\">\n                <Link style={{ color: \"#d63200\" }} to={`/docs/command/`}>\n                  Command Reference\n                </Link>\n                <ul className=\"ml-4 text-base normal-case font-normal\">\n                  {commandNodes.map((node) => (\n                    <li key={node.name} className=\"mt-2\">\n                      <Link\n                        style={{ color: \"#d63200\" }}\n                        to={`/docs/command/${_.kebabCase(node.name)}`}\n                      >\n                        {node.name}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </>\n        )}\n        <Footer links={pageContext.links} />\n      </Main>\n    </>\n  );\n}\n\nDocs.Layout = SidebarLayout;\n\nexport const query = graphql`\n  query DocsQuery($slug: String) {\n    allApiDocs {\n      nodes {\n        ...tocApiDocsFields\n      }\n    }\n\n    allCommandDocs {\n      nodes {\n        ...tocCommandDocsFields\n      }\n    }\n\n    allMarkdownRemark {\n      nodes {\n        ...tocMarkdownFields\n      }\n    }\n\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        category\n        order\n        slug\n        title\n      }\n      headings(depth: h1) {\n        value\n      }\n      html\n    }\n  }\n`;\n"],"names":["uncurryThis","toObject","floor","Math","charAt","replace","stringSlice","slice","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","exports","matched","str","position","captures","namedCaptures","replacement","tailPos","length","m","symbols","undefined","match","ch","capture","n","f","isObject","classof","MATCH","wellKnownSymbol","it","isRegExp","anObject","that","this","result","global","ignoreCase","multiline","dotAll","unicode","sticky","String","argument","TypeError","$","call","requireObjectCoercible","isCallable","toString","getMethod","regExpFlags","getSubstitution","IS_PURE","REPLACE","RegExpPrototype","RegExp","prototype","getFlags","indexOf","max","stringIndexOf","string","searchValue","fromIndex","target","proto","replaceAll","replaceValue","IS_REG_EXP","flags","replacer","searchString","functionalReplace","searchLength","advanceBy","O","endOfLastMatch","Docs","data","pageContext","prepareTocData","gettingStarted","operationsGuide","apiNodes","commandNodes","html","markdownRemark","$1","id","lvl0","frontmatter","slug","startsWith","title","canonical","className","href","Link","style","color","to","map","node","key","name","links","Layout","SidebarLayout"],"sourceRoot":""}