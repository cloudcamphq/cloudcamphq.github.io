{"version":3,"file":"component---src-templates-command-tsx-3eb4c8e9b5b1197cb6a4.js","mappings":"+PAWe,SAASA,EAAT,GAQX,IAPFC,EAOC,EAPDA,KACAC,EAMC,EANDA,YAOIC,EAAK,sKAE+FF,EAAKG,YAAYC,KAFhH,gCAKLC,EAAOL,EAAKG,YAAYG,YAgB5B,OAdID,IASFA,GALAA,GAFAA,EAAOA,EAAKE,WAAW,OAAhB,0CAEKC,QAAQ,0BAA0B,SAACC,EAAOC,EAAIC,GACxD,IAAIC,EAAK,IAAYD,GACrB,MAAM,yDAA0DC,EAAhE,eAAiFA,EAAjF,KAAwFD,EAAxF,gBAGUH,QAAQ,0BAA0B,SAACC,EAAOC,EAAIC,GACxD,IAAIC,EAAK,IAAYD,GACrB,MAAM,yDAA0DC,EAAhE,eAAiFA,EAAjF,KAAwFD,EAAxF,gBAIF,gCACE,gBAAC,IAAD,CACEE,MAAOb,EAAKG,YAAYC,KAAO,WAC/BU,UAAW,SAAW,IAAYd,EAAKG,YAAYC,QAErD,gBAAC,IAAD,KACE,uBAAKW,UAAU,uBACb,sBAAIA,UAAU,qDAAd,QACQf,EAAKG,YAAYC,MAEzB,qBAAGW,UAAU,iCACVf,EAAKG,YAAYa,SAEpB,uBAAKD,UAAU,aACb,gBAACE,EAAD,CAAQJ,MAAM,SAAd,UAEF,gBAAC,IAAD,CAAcR,KAAMH,IACpB,uBAAKa,UAAU,aACb,gBAACE,EAAD,CAAQJ,MAAM,aAAd,cAEiC,IAAlCb,EAAKG,YAAYe,MAAMC,QACtB,4DAGiC,IAAlCnB,EAAKG,YAAYe,MAAMC,QACtB,uBAAKJ,UAAU,aACZf,EAAKG,YAAYe,MAAME,KAAI,SAACC,GAAD,OAC1B,uBAAKC,IAAKD,EAAKjB,KAAMW,UAAU,aAC7B,sBAAIH,GAAI,IAAYS,EAAKjB,OACvB,qBAAGmB,KAAM,IAAM,IAAYF,EAAKjB,OAC9B,uBAAKW,UAAU,QACZM,EAAKG,MACJ,uBAAKT,UAAU,yHACZ,IAAMM,EAAKG,KAAO,MAGvB,uBAAKT,UAAU,oHAAf,KACKM,EAAKjB,KACM,UAAbiB,EAAKI,MAAoB,IAAMJ,EAAKjB,SAM5CiB,EAAKf,aAAe,2BAAMe,EAAKf,aAC/Be,EAAKK,UACJ,gBAAC,IAAD,CAAcrB,KAAMgB,EAAKK,SAAUX,UAAU,mBAMtDV,GAAQ,gBAAC,IAAD,CAAcA,KAAMA,EAAMU,UAAU,eAE/C,gBAAC,IAAD,CAAQY,MAAO1B,EAAY0B,UAQnC,SAASV,EAAOW,GACd,IAAIhB,EAAK,IAAYgB,EAAMf,OAC3B,OACE,sBAAIE,UAAU,wCAAwCH,GAAIA,GACxD,gBAAC,EAAAiB,KAAD,CAAMC,GAAE,IAAMlB,GAAOgB,EAAMG,WANjChC,EAAQiC,OAASC,EAAAA","sources":["webpack://cloudcamp/./src/templates/command.tsx"],"sourcesContent":["import { graphql, Link } from \"gatsby\";\nimport * as React from \"react\";\nimport Header from \"../components/Header\";\nimport Main from \"../components/Main\";\nimport SidebarLayout from \"../components/SidebarLayout\";\nimport HtmlWithCode from \"../components/Code\";\nimport _ from \"lodash\";\n\nimport { CommandDefinition } from \"../../plugins/gatsby-api-source/command-source\";\nimport Footer from \"../components/Footer\";\n\nexport default function Command({\n  data,\n  pageContext,\n}: {\n  data: {\n    commandDocs: CommandDefinition;\n  };\n  pageContext: any;\n}) {\n  let usage = `\n    <div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">camp</span> ${data.commandDocs.name}</code></pre>\n    </div>\n  `;\n  let html = data.commandDocs.description;\n\n  if (html) {\n    // @ts-ignore\n    html = html.replaceAll(/<a/gm, `<a class=\"text-purple-900 underline\" `);\n\n    html = html.replace(/<h2(.*?)>(.*?)<\\/h2>/gm, (match, $1, $2) => {\n      let id = _.kebabCase($2);\n      return `<h3 class=\"text-2xl font-bold mt-10 font-display\" id=\"${id}\"><a href=\"#${id}\">${$2}</a></h3>`;\n    });\n\n    html = html.replace(/<h1(.*?)>(.*?)<\\/h1>/gm, (match, $1, $2) => {\n      let id = _.kebabCase($2);\n      return `<h2 class=\"text-2xl font-bold mt-10 font-display\" id=\"${id}\"><a href=\"#${id}\">${$2}</a></h2>`;\n    });\n  }\n  return (\n    <>\n      <Header\n        title={data.commandDocs.name + \" command\"}\n        canonical={\"/docs/\" + _.kebabCase(data.commandDocs.name)}\n      />\n      <Main>\n        <div className=\"space-y-6 leading-7\">\n          <h1 className=\"font-display text-4xl font-bold flex items-center\">\n            camp {data.commandDocs.name}\n          </h1>\n          <p className=\"border-b pb-5 border-gray-200\">\n            {data.commandDocs.summary}\n          </p>\n          <div className=\"space-y-6\">\n            <H2Link title=\"Usage\">Usage</H2Link>\n          </div>\n          <HtmlWithCode html={usage} />\n          <div className=\"space-y-6\">\n            <H2Link title=\"Arguments\">Arguments</H2Link>\n          </div>\n          {data.commandDocs.flags.length === 0 && (\n            <p>This command takes no arguments</p>\n          )}\n\n          {data.commandDocs.flags.length !== 0 && (\n            <div className=\"space-y-6\">\n              {data.commandDocs.flags.map((flag) => (\n                <div key={flag.name} className=\"space-y-6\">\n                  <h2 id={_.kebabCase(flag.name)}>\n                    <a href={\"#\" + _.kebabCase(flag.name)}>\n                      <div className=\"flex\">\n                        {flag.char && (\n                          <div className=\"bg-purple-100 rounded-md p-0.5 px-1 border border-purple-200 text-sm font-mono text-purple-900 whitespace-nowrap mr-3\">\n                            {\"-\" + flag.char + \", \"}\n                          </div>\n                        )}\n                        <div className=\"bg-purple-100 rounded-md p-0.5 px-1 border border-purple-200 text-sm font-mono text-purple-900 whitespace-nowrap\">\n                          --{flag.name}\n                          {flag.type == \"string\" && \"=\" + flag.name}\n                        </div>\n                      </div>\n                    </a>\n                  </h2>\n\n                  {flag.description && <div>{flag.description}</div>}\n                  {flag.overview && (\n                    <HtmlWithCode html={flag.overview} className=\"space-y-6\" />\n                  )}\n                </div>\n              ))}\n            </div>\n          )}\n          {html && <HtmlWithCode html={html} className=\"space-y-6\" />}\n        </div>\n        <Footer links={pageContext.links} />\n      </Main>\n    </>\n  );\n}\n\nCommand.Layout = SidebarLayout;\n\nfunction H2Link(props: { title: string; children: any }) {\n  let id = _.kebabCase(props.title);\n  return (\n    <h2 className=\"text-2xl font-bold mt-10 font-display\" id={id}>\n      <Link to={`#${id}`}>{props.children}</Link>\n    </h2>\n  );\n}\n\nexport const query = graphql`\n  query CommandQuery($name: String) {\n    allApiDocs {\n      nodes {\n        ...tocApiDocsFields\n      }\n    }\n\n    allCommandDocs {\n      nodes {\n        ...tocCommandDocsFields\n      }\n    }\n\n    allMarkdownRemark {\n      nodes {\n        ...tocMarkdownFields\n      }\n    }\n\n    commandDocs(name: { eq: $name }) {\n      name\n      order\n      summary\n      description\n      flags {\n        char\n        default\n        description\n        name\n        required\n        type\n        overview\n      }\n    }\n  }\n`;\n"],"names":["Command","data","pageContext","usage","commandDocs","name","html","description","replaceAll","replace","match","$1","$2","id","title","canonical","className","summary","H2Link","flags","length","map","flag","key","href","char","type","overview","links","props","Link","to","children","Layout","SidebarLayout"],"sourceRoot":""}