{"version":3,"file":"component---src-templates-docs-tsx-b327996239aa37e3a6f3.js","mappings":"yQAUe,SAASA,EAAT,GAYX,IAXFC,EAWC,EAXDA,KACAC,EAUC,EAVDA,YAWA,GACEC,EAAAA,EAAAA,IAAe,CAAEF,KAAAA,IADdG,EAAL,KAAqBC,EAArB,KAAsCC,EAAtC,KAAgDC,EAAhD,KAEIC,EAAOP,EAAKQ,eAAeD,KAiB/B,OAFAA,GADAA,GALAA,GAJAA,GAFAA,EAAOA,EAAKE,WAAW,OAAhB,gCAEKC,QAAQ,qBAAqB,SAACC,EAAOC,GAC/C,IAAIC,EAAK,IAAYD,GACrB,MAAM,yDAA0DC,EAAhE,eAAiFA,EAAjF,KAAwFD,EAAxF,gBAEUF,QAAQ,qBAAqB,SAACC,EAAOC,GAC/C,IAAIC,EAAK,IAAYD,GACrB,MAAM,yDAA0DC,EAAhE,eAAiFA,EAAjF,KAAwFD,EAAxF,gBAGUF,QAAQ,SAAb,uCACKA,QAAQ,SAAb,qBAGL,gCACE,gBAAC,IAAD,CACEI,MAAOd,EAAKQ,eAAeO,YAAYD,MACvCE,UAAW,aAAehB,EAAKQ,eAAeO,YAAYE,OAE5D,gBAAC,IAAD,KACE,sBAAIC,UAAU,qDACXlB,EAAKQ,eAAeO,YAAYD,OAEnC,gBAAC,IAAD,CAAcI,UAAU,sBAAsBX,KAAMA,IACX,YAAxCP,EAAKQ,eAAeO,YAAYE,MAC/B,gCACE,sBACEC,UAAU,uCACVL,GAAG,gBAEH,qBAAGM,KAAK,sBAAR,sBAEF,sBAAID,UAAU,aACZ,sBAAIA,UAAU,oBAAd,kBAEE,sBAAIA,UAAU,0CACXf,EAAeiB,KAAI,SAACC,GAAD,OAClB,sBAAIC,IAAKD,EAAKN,YAAYE,KAAMC,UAAU,QACxC,gBAAC,EAAAK,KAAD,CACEC,MAAO,CAAEC,MAAO,WAChBC,GAC2B,YAAzBL,EAAKN,YAAYE,KACb,SADJ,SAEaI,EAAKN,YAAYE,MAG/BI,EAAKN,YAAYD,aAM5B,sBAAII,UAAU,oBAAd,kBAEE,sBAAIA,UAAU,0CACXd,EAAgBgB,KAAI,SAACC,GAAD,OACnB,sBAAIC,IAAKD,EAAKN,YAAYE,KAAMC,UAAU,QACxC,gBAAC,EAAAK,KAAD,CACEC,MAAO,CAAEC,MAAO,WAChBC,GAAE,SAAWL,EAAKN,YAAYE,MAE7BI,EAAKN,YAAYD,aAM5B,sBAAII,UAAU,oBAAd,gBAEE,sBAAIA,UAAU,0CACXb,EAASe,KAAI,SAACC,GAAD,OACZ,sBAAIC,IAAKD,EAAKM,KAAMT,UAAU,QAC5B,gBAAC,EAAAK,KAAD,CACEC,MAAO,CAAEC,MAAO,WAChBC,GAAE,aAAe,IAAYL,EAAKM,OAEjCN,EAAKM,YAMhB,sBAAIT,UAAU,oBAAd,oBAEE,sBAAIA,UAAU,0CACXZ,EAAac,KAAI,SAACC,GAAD,OAChB,sBAAIC,IAAKD,EAAKM,KAAMT,UAAU,QAC5B,gBAAC,EAAAK,KAAD,CACEC,MAAO,CAAEC,MAAO,WAChBC,GAAE,iBAAmB,IAAYL,EAAKM,OAErCN,EAAKM,cAStB,gBAAC,IAAD,CAAQC,MAAO3B,EAAY2B,UAMnC7B,EAAK8B,OAASC,EAAAA","sources":["webpack://cloudcamp/./src/templates/docs.tsx"],"sourcesContent":["import { graphql, Link } from \"gatsby\";\nimport * as React from \"react\";\nimport Header from \"../components/Header\";\nimport Main from \"../components/Main\";\nimport SidebarLayout from \"../components/SidebarLayout\";\nimport HtmlWithCode from \"../components/Code\";\nimport _ from \"lodash\";\nimport Footer from \"../components/Footer\";\nimport { prepareTocData } from \"../components/TableOfContents\";\n\nexport default function Docs({\n  data,\n  pageContext,\n}: {\n  data: {\n    markdownRemark: {\n      html: string;\n      frontmatter: { slug: string; title: string };\n      headings: { value: string }[];\n    };\n  };\n  pageContext: any;\n}) {\n  let [gettingStarted, operationsGuide, apiNodes, commandNodes] =\n    prepareTocData({ data } as any);\n  let html = data.markdownRemark.html;\n\n  // @ts-ignore\n  html = html.replaceAll(/<a/gm, `<a style=\"color: #d63200;\" `);\n\n  html = html.replace(/<h1>(.*?)<\\/h1>/gm, (match, $1) => {\n    let id = _.kebabCase($1);\n    return `<h2 class=\"text-2xl font-bold mt-10 font-display\" id=\"${id}\"><a href=\"#${id}\">${$1}</a></h2>`;\n  });\n  html = html.replace(/<h2>(.*?)<\\/h2>/gm, (match, $1) => {\n    let id = _.kebabCase($1);\n    return `<h3 class=\"text-2xl font-bold mt-10 font-display\" id=\"${id}\"><a href=\"#${id}\">${$1}</a></h3>`;\n  });\n\n  html = html.replace(/<ul>/gm, `<ul class=\"list-disc list-inside\">`);\n  html = html.replace(/<li>/gm, `<li class=\"py-1\">`);\n\n  return (\n    <>\n      <Header\n        title={data.markdownRemark.frontmatter.title}\n        canonical={\"/docs/api/\" + data.markdownRemark.frontmatter.slug}\n      />\n      <Main>\n        <h1 className=\"font-display text-4xl font-bold flex items-center\">\n          {data.markdownRemark.frontmatter.title}\n        </h1>\n        <HtmlWithCode className=\"space-y-6 leading-7\" html={html} />\n        {data.markdownRemark.frontmatter.slug == \"overview\" && (\n          <>\n            <h2\n              className=\"text-2xl font-bold pt-7 font-display\"\n              id=\"introduction\"\n            >\n              <a href=\"#table-of-contents\">Table of contents</a>\n            </h2>\n            <ul className=\"pt-2 ml-4\">\n              <li className=\"mb-8 font-medium\">\n                Getting Started\n                <ul className=\"ml-4 text-base normal-case font-normal\">\n                  {gettingStarted.map((node) => (\n                    <li key={node.frontmatter.slug} className=\"mt-2\">\n                      <Link\n                        style={{ color: \"#d63200\" }}\n                        to={\n                          node.frontmatter.slug == \"overview\"\n                            ? \"/docs/\"\n                            : `/docs/${node.frontmatter.slug}`\n                        }\n                      >\n                        {node.frontmatter.title}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n              <li className=\"mb-8 font-medium\">\n                Using CloudCamp\n                <ul className=\"ml-4 text-base normal-case font-normal\">\n                  {operationsGuide.map((node) => (\n                    <li key={node.frontmatter.slug} className=\"mt-2\">\n                      <Link\n                        style={{ color: \"#d63200\" }}\n                        to={`/docs/${node.frontmatter.slug}`}\n                      >\n                        {node.frontmatter.title}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n              <li className=\"mb-8 font-medium\">\n                API Reference\n                <ul className=\"ml-4 text-base normal-case font-normal\">\n                  {apiNodes.map((node) => (\n                    <li key={node.name} className=\"mt-2\">\n                      <Link\n                        style={{ color: \"#d63200\" }}\n                        to={`/docs/api/${_.kebabCase(node.name)}`}\n                      >\n                        {node.name}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n              <li className=\"mb-8 font-medium\">\n                Command Reference\n                <ul className=\"ml-4 text-base normal-case font-normal\">\n                  {commandNodes.map((node) => (\n                    <li key={node.name} className=\"mt-2\">\n                      <Link\n                        style={{ color: \"#d63200\" }}\n                        to={`/docs/command/${_.kebabCase(node.name)}`}\n                      >\n                        {node.name}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </>\n        )}\n        <Footer links={pageContext.links} />\n      </Main>\n    </>\n  );\n}\n\nDocs.Layout = SidebarLayout;\n\nexport const query = graphql`\n  query DocsQuery($slug: String) {\n    allApiDocs {\n      nodes {\n        ...tocApiDocsFields\n      }\n    }\n\n    allCommandDocs {\n      nodes {\n        ...tocCommandDocsFields\n      }\n    }\n\n    allMarkdownRemark {\n      nodes {\n        ...tocMarkdownFields\n      }\n    }\n\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      frontmatter {\n        category\n        order\n        slug\n        title\n      }\n      headings(depth: h1) {\n        value\n      }\n      html\n    }\n  }\n`;\n"],"names":["Docs","data","pageContext","prepareTocData","gettingStarted","operationsGuide","apiNodes","commandNodes","html","markdownRemark","replaceAll","replace","match","$1","id","title","frontmatter","canonical","slug","className","href","map","node","key","Link","style","color","to","name","links","Layout","SidebarLayout"],"sourceRoot":""}